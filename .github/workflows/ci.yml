name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          python3-dev \
          libgtk-3-dev \
          libgdk-pixbuf2.0-dev \
          libcairo-gobject2 \
          libgirepository1.0-dev \
          gir1.2-webkit2-4.0
    
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gobject-introspection gtk+3
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check src/ tests/
    
    - name: Type check with mypy
      run: |
        mypy src/
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src/persephone --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build application packages
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          python3-dev \
          libgtk-3-dev \
          libgdk-pixbuf2.0-dev \
          libcairo-gobject2 \
          libgirepository1.0-dev \
          gir1.2-webkit2-4.0
    
    - name: Install system dependencies (macOS)  
      if: runner.os == 'macOS'
      run: |
        brew install gobject-introspection gtk+3
    
    - name: Install briefcase
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install -e .
    
    - name: Create application
      run: |
        briefcase create
    
    - name: Build application
      run: |
        briefcase build
    
    - name: Package application (Linux)
      if: runner.os == 'Linux'
      run: |
        briefcase package --format AppImage
    
    - name: Package application (Windows)
      if: runner.os == 'Windows'
      run: |
        briefcase package --format MSI
    
    - name: Package application (macOS)
      if: runner.os == 'macOS'
      run: |
        briefcase package --format DMG
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: persephone-${{ runner.os }}
        path: |
          dist/*.AppImage
          dist/*.msi  
          dist/*.dmg
        if-no-files-found: warn